import{W as p}from"./index-DZpm7Dsx.js";class f extends p{constructor(){super(...arguments),this.group="CapacitorStorage"}async configure({group:e}){"string"==typeof e&&(this.group=e)}async get(e){return{value:this.impl.getItem(this.applyPrefix(e.key))}}async set(e){this.impl.setItem(this.applyPrefix(e.key),e.value)}async remove(e){this.impl.removeItem(this.applyPrefix(e.key))}async keys(){return{keys:this.rawKeys().map(e=>e.substring(this.prefix.length))}}async clear(){for(const e of this.rawKeys())this.impl.removeItem(e)}async migrate(){const e=[],t=[],s="_cap_",i=Object.keys(this.impl).filter(e=>0===e.indexOf(s));for(const n of i){var r=n.substring(s.length),a=null!=(a=this.impl.getItem(n))?a:"",p=(await this.get({key:r}))["value"];("string"==typeof p?t:(await this.set({key:r,value:a}),e)).push(r)}return{migrated:e,existing:t}}async removeOld(){const e=Object.keys(this.impl).filter(e=>0===e.indexOf("_cap_"));for(const t of e)this.impl.removeItem(t)}get impl(){return window.localStorage}get prefix(){return"NativeStorage"===this.group?"":"".concat(this.group,".")}rawKeys(){return Object.keys(this.impl).filter(e=>0===e.indexOf(this.prefix))}applyPrefix(e){return this.prefix+e}}export{f as PreferencesWeb};