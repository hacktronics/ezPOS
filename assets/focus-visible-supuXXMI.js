const v="ion-focused",L="ion-focusable",m=["Tab","ArrowDown","Space","Escape"," ","Shift","Enter","ArrowLeft","ArrowRight","ArrowUp","Home","End"],h=e=>{let t=[],o=!0;const s=e?e.shadowRoot:document,n=e||document.body,r=e=>{t.forEach(e=>e.classList.remove(v)),e.forEach(e=>e.classList.add(v)),t=e},i=()=>{o=!1,r([])},c=e=>{(o=m.includes(e.key))||r([])},d=e=>{o&&void 0!==e.composedPath&&(e=e.composedPath().filter(e=>!!e.classList&&e.classList.contains(L)),r(e))},a=()=>{s.activeElement===n&&r([])};return s.addEventListener("keydown",c),s.addEventListener("focusin",d),s.addEventListener("focusout",a),s.addEventListener("touchstart",i,{passive:!0}),s.addEventListener("mousedown",i),{destroy:()=>{s.removeEventListener("keydown",c),s.removeEventListener("focusin",d),s.removeEventListener("focusout",a),s.removeEventListener("touchstart",i),s.removeEventListener("mousedown",i)},setFocus:r}};export{h as startFocusVisible};